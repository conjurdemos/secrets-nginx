worker_processes  1;

error_log logs/error.log;
error_log logs/verbose.log debug;

pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream; 

    # The upstream service we are in front of
    upstream service {
      server localhost:4567;
    }

    server {
      listen 80;

      # Mandatory to use the conjur lib to perform actions as the host
      # identity.
      include '/vagrant/conjur/conjur-authn.conf';

      # An internal location we use to fetch the variables.
      # Using an exact match here prevents us from messing up 
      # your location matching, but it's optional, you could also
      # use the rest of the uri to capture the variable name
      location = /conjur/core/variables {
          # Set the $variable_id variable from ngx.ctx.  Better to error if it's missing than 
          # have a confusing error from conjur.
          set_by_lua $variable_id 'return ngx.ctx.variable_id or error("missing variable_id in ctx")';

          # Rewrite to add host credentials
          rewrite_by_lua 'conjur.authenticate_host()';
          
          internal;
          proxy_pass_request_headers off;
          proxy_pass_request_body off;
          proxy_method GET;
          proxy_pass 'https://core-sandbox-conjur.herokuapp.com/variables/$variable_id/value';
      }

      # The proxy over the upstream service.  We'll use a rewrite hook to 
      # add the secrets
      location / {

        proxy_pass http://service;
      }
    }
}
